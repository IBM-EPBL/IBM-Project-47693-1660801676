{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 10,
      "id": "4e8e96f8",
      "metadata": {
        "id": "4e8e96f8"
      },
      "outputs": [],
      "source": [
        "import pandas as pd \n",
        "import numpy as np\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import confusion_matrix,accuracy_score"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "5f657d4e",
      "metadata": {
        "id": "5f657d4e"
      },
      "outputs": [],
      "source": [
        "data=pd.read_csv(\"/dataset_website.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "1a5131a8",
      "metadata": {
        "id": "1a5131a8",
        "outputId": "5763c2c3-a030-420d-e863-bfe647c22d5e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[-1  1  1 ...  1 -1 -1]\n",
            " [ 1  1  1 ...  1  1 -1]\n",
            " [ 1  0  1 ...  0 -1 -1]\n",
            " ...\n",
            " [ 1 -1  1 ...  0  1 -1]\n",
            " [-1 -1  1 ...  1  1 -1]\n",
            " [-1 -1  1 ...  1 -1 -1]] [-1 -1 -1 ... -1 -1 -1]\n"
          ]
        }
      ],
      "source": [
        "x=data.iloc[:,1:35].values\n",
        "y=data.iloc[:,-1].values\n",
        "print(x,y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "a2614ed7",
      "metadata": {
        "id": "a2614ed7"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "f2420260",
      "metadata": {
        "id": "f2420260",
        "outputId": "4ab2afe8-b4cc-4706-ff22-80fcf9050576",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "lr=LogisticRegression()\n",
        "lr.fit(x_train,y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "78c0f443",
      "metadata": {
        "id": "78c0f443",
        "outputId": "402e7ee9-ca3a-4e26-813c-58d61d16d820",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "y_pred1=lr.predict(x_test)\n",
        "from sklearn.metrics import accuracy_score\n",
        "log_reg=accuracy_score(y_test,y_pred1)\n",
        "log_reg"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "id": "54db4bf2",
      "metadata": {
        "id": "54db4bf2"
      },
      "outputs": [],
      "source": [
        "import pickle\n",
        "pickle.dump(lr,open('phishing_website.pkl','wb'))"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.2"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}